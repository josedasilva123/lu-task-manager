// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       String @id @default(uuid())
  name     String
  email    String
  password String
  tasks    Task[]
}

model Task {
  id              String          @id @default(uuid())
  localId         String?
  local           Local?          @relation(fields: [localId], references: [id], onDelete: SetNull)
  classficationId String?
  classfication   Classification? @relation(fields: [classficationId], references: [id], onDelete: SetNull)
  title           String          @db.VarChar(20)
  categories      Category[]
  description     String
  statusId        String?
  status          Status?         @relation(fields: [statusId], references: [id], onDelete: SetNull)
  links           Link[]
  files           File[]
  date            DateTime?  
  userId          String?
  user            User?           @relation(fields: [userId], references: [id], onDelete: SetNull)
  lastUserId      String?
  isDeleted       Boolean         @default(false)
  createdAt       DateTime        @default(now())
  updatedAt       DateTime?
}

model Link {
  id     String @id @default(uuid())
  title  String
  url    String
  taskId String
  task   Task   @relation(fields: [taskId], references: [id], onDelete: Cascade)
  createdAt       DateTime        @default(now())
}

model File {
  id     String  @id @default(uuid())
  name   String
  key    String
  url    String
  tasks Task[]
  createdAt       DateTime        @default(now())
}

model Local {
  id    String @id @default(uuid())
  name  String @db.VarChar(20)
  tasks Task[]
  createdAt       DateTime        @default(now())
}

model Category {
  id    String @id @default(uuid())
  name  String @db.VarChar(30)
  tasks Task[]
  createdAt       DateTime        @default(now())
}

model Status {
  id    String @id @default(uuid())
  name  String @db.VarChar(15)
  tasks Task[]
  createdAt       DateTime        @default(now())
}

model Classification {
  id    String @id @default(uuid())
  name  String @db.VarChar(20)
  tasks Task[]
  createdAt       DateTime        @default(now())
}
